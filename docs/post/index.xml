<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Nobuto Murata</title>
    <link>https://nobuto-m.github.io/post/</link>
      <atom:link href="https://nobuto-m.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-US</language><lastBuildDate>Sun, 02 Jul 2023 16:29:52 +0900</lastBuildDate>
    <image>
      <url>https://nobuto-m.github.io/media/icon_hu1576a685d49928373d27b4c079446fa6_3195_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://nobuto-m.github.io/post/</link>
    </image>
    
    <item>
      <title>Ubuntu Server autoinstall with a physical machine</title>
      <link>https://nobuto-m.github.io/post/2023/ubuntu-server-autoinstall-with-a-physical-machine/</link>
      <pubDate>Sun, 02 Jul 2023 16:29:52 +0900</pubDate>
      <guid>https://nobuto-m.github.io/post/2023/ubuntu-server-autoinstall-with-a-physical-machine/</guid>
      <description>&lt;p&gt;There is a great set of articles in the Ubuntu Server guide about how to achieve an unattended installation of Ubuntu Server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ubuntu.com/server/docs/install/autoinstall&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Automated Server installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ubuntu.com/server/docs/install/autoinstall-quickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Automated Server install quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ubuntu.com/server/docs/install/autoinstall-reference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Automated Server installer config file reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And I followed those to test my minimal autoinstall file as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#cloud-config&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;autoinstall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# password=ubuntu&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;$6$exDY1mhS4KUYCE/2$zmn9ToZwTKLhCw.b4/b.ZRTIZM30JZ4QrOQ2aOXJ8yk96xpcCof0kxKwuX1kqLG/ygbJ1f8wxED22bTL4F46P0&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;install-server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# https://launchpad.net/bugs/1974483&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;allow-pw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;no&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;geoip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;flavor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;generic &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# or hwe&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It works flawlessly with the &lt;code&gt;kvm&lt;/code&gt; command with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-append &lt;span class=&#34;s1&#34;&gt;&amp;#39;autoinstall ds=nocloud-net;s=http://_gateway:3003/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per the document. However, when it comes to a physical machine installation with the vanilla 22.04 LTS ISO, the installer just stopped at the initial language selection step.&lt;/p&gt;
&lt;p&gt;In the end, it was a subtle difference. &lt;a href=&#34;https://www.gnu.org/software/grub/manual/grub/grub.html#Simple-commands&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Without escaping the semicolon&lt;/a&gt;, the URL to the autoinstall file is ignored. One missing backslash cost me more than an hour. I &lt;a href=&#34;https://discourse.ubuntu.com/t/automated-server-install-quickstart/16614/50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;provided feedback to the document&lt;/a&gt; and I hope it&amp;rsquo;s a time saver for somebody.&lt;/p&gt;


















&lt;figure  id=&#34;figure-the-semicolon-must-be-escaped-in-grub&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;The semicolon must be escaped in GRUB&#34;
           src=&#34;https://nobuto-m.github.io/post/2023/ubuntu-server-autoinstall-with-a-physical-machine/featured.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The semicolon must be escaped in GRUB
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>How I spent year-end holidays</title>
      <link>https://nobuto-m.github.io/post/2021/how-i-spent-year-end-holidays/</link>
      <pubDate>Wed, 06 Jan 2021 10:09:02 +0900</pubDate>
      <guid>https://nobuto-m.github.io/post/2021/how-i-spent-year-end-holidays/</guid>
      <description>&lt;p&gt;I intentionally spent the holidays by keeping myself busy with some technical stuff because I knew I would regret it if nothing had been done since there was no trip planned during the period. Those were not that creative, but to follow some tutorials, for example, where I didn&amp;rsquo;t have experience with or to address some day-to-day pains.&lt;/p&gt;
&lt;h2 id=&#34;immediate-wins&#34;&gt;Immediate wins&lt;/h2&gt;
&lt;h3 id=&#34;tailscale&#34;&gt;Tailscale&lt;/h3&gt;
&lt;p&gt;After moving to a new place last year, I lost the ability to assign a global IP address to my router. And it became impossible to access my testbed machine from outside with direct SSH forwarded by a router. There are multiple workarounds, including setting up a VPN like OpenVPN, Wireguard, etc., with a server on the Internet as a hub in the middle, or using a reverse tunnel. But it&amp;rsquo;s still nice if I can have some sort of direct and peer-to-peer connection.&lt;/p&gt;
&lt;p&gt;I tried both &lt;a href=&#34;https://www.zerotier.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ZeroTier&lt;/a&gt; and &lt;a href=&#34;https://tailscale.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tailscale&lt;/a&gt;, which offer NAT traversal with VPN. I chose Tailscale in the end for simplicity, and I like their stance trying to explain &lt;a href=&#34;https://tailscale.com/blog/how-tailscale-works/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;everything happening inside&lt;/a&gt; and &lt;a href=&#34;https://tailscale.com/blog/how-nat-traversal-works/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;related technologies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not every component of it is open-source, but it&amp;rsquo;s convenient since everything is well managed. There were some other options to set up an &lt;a href=&#34;https://www.jordanwhited.com/posts/wireguard-endpoint-discovery-nat-traversal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;equivalent&lt;/a&gt; or &lt;a href=&#34;https://github.com/juanfont/headscale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;compatible&lt;/a&gt; server though.&lt;/p&gt;


















&lt;figure  id=&#34;figure-tailscale-eases-a-headache-of-nat&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Tailscale eases a headache of NAT&#34;
           src=&#34;https://nobuto-m.github.io/post/2021/how-i-spent-year-end-holidays/featured.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Tailscale eases a headache of NAT
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Not only for the remote access from my laptop on the go to the testbed machine (the arrow &amp;ldquo;A&amp;rdquo;), I enabled Tailscale for accessing my Grafana dashboard running inside a cloud instance (&amp;ldquo;B&amp;rdquo;) which is not necessary to be exposed to the Internet. I could just use SSH port forwarding or &lt;code&gt;sshuttle&lt;/code&gt; but having a Wireguard-based connection without having a VPN endpoint exposed is like magic. As a bonus, I can reliably access a Raspberry-Pi running somewhere behind three NAT instances (&amp;ldquo;C&amp;rdquo;). I no longer have to worry about the SSH reverse tunnel for it and its retry logic I set up some time ago.&lt;/p&gt;
&lt;h3 id=&#34;excalidraw&#34;&gt;Excalidraw&lt;/h3&gt;
&lt;p&gt;As you can see above, the diagram was made with &lt;a href=&#34;https://excalidraw.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Excalidraw&lt;/a&gt;. It&amp;rsquo;s just amazing as turning my ugly diagram into a beautiful one. It&amp;rsquo;s getting &lt;a href=&#34;https://blog.excalidraw.com/one-year-of-excalidraw/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;more and more features&lt;/a&gt; these days. How wonderful it is.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;http://asciiflow.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ASCIIFlow&lt;/a&gt; for some time since it was all text-based, which is convenient to have a diagram in Markdown text. However, I would use Excalidraw for most of the cases from now on for personal use.&lt;/p&gt;
&lt;h2 id=&#34;random-stuff&#34;&gt;Random stuff&lt;/h2&gt;
&lt;h3 id=&#34;setting-up-this-blog&#34;&gt;Setting up this blog&lt;/h3&gt;
&lt;p&gt;I had some blogs so far on Blogger, Tumblr, and Medium, etc. But I wanted to have another one since Medium is getting annoying, especially when reading something on mobile. I believe this is the 5th blog. I&amp;rsquo;m using Hugo I&amp;rsquo;ve been interested in for some time, and I&amp;rsquo;ve found a lovely template, &lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt;. I published &lt;a href=&#34;https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/&#34;&gt;the first post in two years&lt;/a&gt;, and I tried to fix the template&amp;rsquo;s corner-case issues. Then the author updated those on top of my &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/pull/2056&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;some&lt;/a&gt; pull &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/pull/2054&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;requests&lt;/a&gt;. Outstanding customizations are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues/2064&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;showing both the original published date and the modified/updated date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;yearly archive of the posts &lt;a href=&#34;https://discourse.gohugo.io/t/how-to-generate-chronological-blog-archives-in-hugo/13491/6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;by defining a new taxonomy&lt;/a&gt; as &amp;ldquo;year&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What took time to figure out was about the snap package of Hugo. It&amp;rsquo;s currently under strict confinement, but &lt;a href=&#34;https://github.com/gohugoio/hugoDocs/issues/1222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it doesn&amp;rsquo;t work with a template like Wowchemy with Go modules&lt;/a&gt;. There is &lt;a href=&#34;https://forum.snapcraft.io/t/request-for-classic-confinement-for-hugo-snap/19892&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a request to use classic confinement&lt;/a&gt;, but for now, I have &lt;code&gt;alias hugo=/snap/hugo/current/bin/hugo&lt;/code&gt; as a workaround.&lt;/p&gt;
&lt;p&gt;I also tried &lt;a href=&#34;https://github.com/marketplace/actions/hugo-setup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gihub Action for Hugo&lt;/a&gt; to automate the builds on the Github side. In the end, I prefer building it locally since it&amp;rsquo;s just a matter of seconds. I&amp;rsquo;ve also learned that &lt;code&gt;prefers-color-scheme&lt;/code&gt; in CSS &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=998903&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doesn&amp;rsquo;t work with Chrome/Chromium on Linux&lt;/a&gt; while working with Firefox.&lt;/p&gt;
&lt;h3 id=&#34;thinkpad-battery&#34;&gt;Thinkpad battery&lt;/h3&gt;
&lt;p&gt;Previously, the charge percentage dropped suddenly from 30-40% to nearly zero. I thought the battery was broken. But it was clearly written as &lt;a href=&#34;https://linrunner.de/tlp/faq/battery.html#erratic-battery-behavior-on-thinkpad-t420-s-t520-w520-x220-and-all-later-models&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a known issue&lt;/a&gt; in the TLP documentation so it became sane after setting it back to &lt;code&gt;STOP_CHARGE_THRESH_BAT0=100&lt;/code&gt;.&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://nobuto-m.github.io/post/2021/how-i-spent-year-end-holidays/thinkpad-battery.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&#34;wake-on-lan&#34;&gt;Wake-on-LAN&lt;/h3&gt;
&lt;p&gt;I haven&amp;rsquo;t used Wake-on-LAN for some time because I relied on a smart plug to power on my testbed machine remotely. Nowadays, I&amp;rsquo;m on the same network with the machine as I have fewer chances to go out. So waking it up with a terminal command is handy without opening a mobile app. Enabling WOL wasn&amp;rsquo;t as straightforward as it sounded. Googling told me that I had to specify the MAC address of the NIC explicitly for Netplan (indirectly for systemd-networkd). I wanted to know it earlier, so I opened &lt;a href=&#34;https://github.com/CanonicalLtd/netplan/pull/180&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a pull request to add the caveat in the doc&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;squid-shutdown-took-time&#34;&gt;Squid shutdown took time&lt;/h3&gt;
&lt;p&gt;I knew my laptop was taking time to shut down due to a LXD container running squid-deb-proxy. I thought it was inevitable to flush the content on memory to the disk, but &lt;a href=&#34;http://www.squid-cache.org/Doc/config/shutdown_lifetime/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it&lt;/a&gt; was actually &lt;a href=&#34;http://squid-web-proxy-cache.1019090.n4.nabble.com/Question-about-shutdown-lifetime-behavior-tp4685365p4685366.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;configurable&lt;/a&gt;. Once setting &lt;code&gt;shutdown_lifetime 3 seconds&lt;/code&gt;, the shutdown starts almost immediately now.&lt;/p&gt;
&lt;h3 id=&#34;lets-encrypt-wildcard-certs-and-dns-01&#34;&gt;Let&amp;rsquo;s encrypt wildcard certs and DNS-01&lt;/h3&gt;
&lt;p&gt;I wanted to have a proper TLS certificate for services running behind a firewall and not exposed to the Internet. So far, I only used HTTP-01 challenges for my public web servers. Now that wildcard certs with DNS-01 is available with Let&amp;rsquo;s encrypt, I migrated the nameservers for one of my domains to Cloudflare, which is in &lt;a href=&#34;https://community.letsencrypt.org/t/dns-providers-who-easily-integrate-with-lets-encrypt-dns-validation/86438&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the list of DNS-01 capable providers with certbot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One caveat was that API-token based authentication wasn&amp;rsquo;t available with the version of &lt;code&gt;python3-cloudflare&lt;/code&gt; in Ubuntu 20.04 LTS.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://certbot-dns-cloudflare.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://certbot-dns-cloudflare.readthedocs.io/en/stable/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using Cloudflare Tokens also requires at least version 2.3.1 of the cloudflare python module.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I tried to backport a newer one to 20.04, but it wasn&amp;rsquo;t straightforward. In the end, I&amp;rsquo;ve migrated from the deb based certbot to the snap one as &lt;a href=&#34;https://github.com/certbot/website/pull/613&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the upstream recommends it&lt;/a&gt;. It&amp;rsquo;s basically with the three commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo snap install certbot --classic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo snap &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; certbot trust-plugin-with-root&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ok
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo snap install certbot-dns-cloudflare
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I knew how to redirect access of port 80 with HTTP to 443 with HTTPS. I&amp;rsquo;ve learned that I can also redirect HTTP access to port 3000 of Grafana to HTTPS with the same port with the following &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_ssl_module.html#errors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;expression&lt;/a&gt;, which is neat.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;error_page 497 =301 https://$host:$server_port$request_uri;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;grafana--prometheus--node-exporter&#34;&gt;Grafana + Prometheus + node-exporter&lt;/h3&gt;
&lt;p&gt;I don&amp;rsquo;t need to monitor my personal-use servers closely, but I set up a standard set of Prometheus and Node exporter for starters. Nothing is interesting there, but I used a Let&amp;rsquo;s encrypt cert with DNS-01 as the Grafana&amp;rsquo;s hostname is not associated with a global IP address at all.&lt;/p&gt;
&lt;p&gt;I have &lt;a href=&#34;https://grafana.com/tutorials/run-grafana-behind-a-proxy/#2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a reverse proxy using Nginx&lt;/a&gt; not exposed to the Internet either, but once I get certs with DNS-01, I can use HTTPS properly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo certbot certonly &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -i nginx &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --dns-cloudflare &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --cert-name grafana-wildcard &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;DOMAIN (e.g., *.t.example.com)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -sv -o/dev/null https://grafana.t.example.com:3000/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   Trying 10.0.0.100&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:3000...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* TCP_NODELAY &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* Connected to grafana.t.example.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.0.0.100&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; port &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* Server certificate:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*  subject: &lt;span class=&#34;nv&#34;&gt;CN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;*.t.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*  start date: Jan  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; 06:24:57 &lt;span class=&#34;m&#34;&gt;2021&lt;/span&gt; GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*  expire date: Apr  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; 06:24:57 &lt;span class=&#34;m&#34;&gt;2021&lt;/span&gt; GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*  subjectAltName: host &lt;span class=&#34;s2&#34;&gt;&amp;#34;grafana.t.example.com&amp;#34;&lt;/span&gt; matched cert&lt;span class=&#34;s1&#34;&gt;&amp;#39;s &amp;#34;*.t.example.com&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;*  issuer: C=US; O=Let&amp;#39;&lt;/span&gt;s Encrypt&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;R3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*  SSL certificate verify ok.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

















&lt;figure  id=&#34;figure-prometheus-node-exporter-fullhttpsgrafanacomgrafanadashboards1860-dashboard&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;[Prometheus Node Exporter Full](https://grafana.com/grafana/dashboards/1860) dashboard&#34;
           src=&#34;https://nobuto-m.github.io/post/2021/how-i-spent-year-end-holidays/grafana.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      &lt;a href=&#34;https://grafana.com/grafana/dashboards/1860&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus Node Exporter Full&lt;/a&gt; dashboard
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;h3 id=&#34;intel-nvme-ssd-firmware-upgrade&#34;&gt;Intel NVMe SSD firmware upgrade&lt;/h3&gt;
&lt;p&gt;I struggled with a sympton that NVMe SSD ended up with read-only after suspend and resume. And it claimed that it was write-protected somehow. It rarely happens, but when it does, I had to hard-reboot the machine, which was annoying. After some googling, it looked like the first thing I should try was to upgrade the firmware. Once it&amp;rsquo;s &lt;a href=&#34;https://www.intel.com/content/www/us/en/support/articles/000056193/memory-and-storage.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;updated using an ISO image&lt;/a&gt; with secure boot disabled temporarily, I haven&amp;rsquo;t seen the original issue so far.&lt;/p&gt;
&lt;h2 id=&#34;closing&#34;&gt;Closing&lt;/h2&gt;
&lt;p&gt;It was somewhat productive to spend the holidays in this way. I replaced Ubuntu 18.04 LTS with 20.04 LTS for the testbed machine, but didn&amp;rsquo;t have time to upgrade my laptop from 20.04 to 20.10 or discontinue one 16.04 installation of a cloud instance in favor of a new instance with 20.04 already there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shortcut key to mute/unmute yourself in Zoom, Google Meet, or Teams</title>
      <link>https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/</link>
      <pubDate>Thu, 31 Dec 2020 03:49:53 +0900</pubDate>
      <guid>https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/</guid>
      <description>

















&lt;figure  id=&#34;figure-a-custom-and-global-shortcut-key-to-mute--unmute-yourself-in-zoom-or-google-meet&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;A custom and global shortcut key to mute / unmute yourself in Zoom or Google Meet&#34;
           src=&#34;https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/featured.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      A custom and global shortcut key to mute / unmute yourself in Zoom or Google Meet
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Just like everyone else, 2020 was the year of having more and more video-conference calls. How many times did we struggle to find the meeting window during a call, and say &amp;ldquo;Sorry, I was on mute&amp;rdquo;? I tried to address the pain and ended up with the following setup.&lt;/p&gt;
&lt;h2 id=&#34;xdotool&#34;&gt;xdotool&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xdotool&lt;/code&gt; is a great automation tool for X, and it can search a window, activate it, and simulate keyboard input. That&amp;rsquo;s a perfect match for the use case here.&lt;/p&gt;
&lt;p&gt;Here is an example command for Google Meet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xdotool search --name &lt;span class=&#34;s1&#34;&gt;&amp;#39;^Meet - .+ - Chromium$&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    windowactivate --sync &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    key ctrl+d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the chained commands, it does:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;search windows named like &lt;code&gt;Meet - &amp;lt;MEETING_ID&amp;gt; - Chromium&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;activate the first window passed by the previous line and wait until it gets active (&lt;code&gt;--sync&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;send a keystroke as &lt;code&gt;Ctrl+D&lt;/code&gt;, which is the default shortcut in Meet&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the way, my main browser is Firefox, but I have to use Chromium to join Meet calls since it tends to have less CPU utilization.&lt;/p&gt;
&lt;p&gt;You can do something similar for Zoom with &lt;code&gt;Alt+A&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xdotool search --name &lt;span class=&#34;s1&#34;&gt;&amp;#39;^Zoom Meeting$&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    windowactivate --sync &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    key alt+a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Microsoft Teams should work with &lt;code&gt;Ctrl+Shift+M&lt;/code&gt; at least for the web version.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xdotool search --name &lt;span class=&#34;s1&#34;&gt;&amp;#39;^.* Microsoft Teams - Chromium$&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    windowactivate --sync &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    key ctrl+shift+m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gnome-keyboard-shortcuts&#34;&gt;GNOME keyboard shortcuts&lt;/h2&gt;
&lt;p&gt;The commands above can be mapped to a shortcut key with GNOME.&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/gnome-control-center-keyboard.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;It&amp;rsquo;s pretty simple, but some tricks may be required. As far as I see, &lt;code&gt;gsd-media-keys&lt;/code&gt; will invoke a command when a shortcut key is pressed, not released. In my case, I use &lt;code&gt;Super+Shift+A&lt;/code&gt; as the shortcut key, so Meet may recognize keys pressed as &lt;code&gt;Super+Shift+A&lt;/code&gt; + &lt;code&gt;Ctrl+D&lt;/code&gt; = &lt;code&gt;Super+Shift+Ctrl+A+D&lt;/code&gt; which doesn&amp;rsquo;t trigger the mute/unmute behavior actually. Keys can be canceled with &lt;code&gt;keyup&lt;/code&gt;, so the key command was turned into &lt;code&gt;keyup shift+super+a&lt;/code&gt; in the end.&lt;/p&gt;
&lt;p&gt;Also, I wanted to use the same shortcut key for multiple services, and I have the following line which tries Google Meet first, then Zoom if no Meet window is found. It should work most of the cases unless you join multiple meetings at the same time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sh -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    xdotool search --name &amp;#39;^Meet - .+ - Chromium&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        windowactivate --sync
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        keyup shift+super+a key ctrl+d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    || xdotool search --name &amp;#39;^.* Microsoft Teams - Chromium&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        windowactivate --sync
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        keyup shift+super+a key ctrl+shift+m
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    || xdotool search --name &amp;#39;^Zoom Meeting&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        windowactivate --sync
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        keyup shift+super+a key alt+a
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;--clearmodifiers&lt;/code&gt; can be used to simplify the whole commands, but when I tried, it sometimes left the &lt;code&gt;Super&lt;/code&gt; or &lt;code&gt;Shift&lt;/code&gt; key pressed depending on the timing I released the key.&lt;/p&gt;
&lt;h2 id=&#34;hardware-muteunmute-button&#34;&gt;Hardware mute/unmute button&lt;/h2&gt;
&lt;p&gt;Going further, I wanted to have a dedicated button to mute/unmute myself especially for some relaxed meetings where I don&amp;rsquo;t have to keep my hands on the keyboard all the time.&lt;/p&gt;
&lt;p&gt;Back in October, I bought a USB volume controller, which is recognized as &amp;ldquo;STMicroelectronics USB Volume Control&amp;rdquo; from the OS. It was around 15 USD.&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/usb-volume-controller_hu3535a59bacd6c5c8b04c4630c62b3385_215479_c20eba47d76aea6a8a19cea4d0e9aa3b.webp 400w,
               /post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/usb-volume-controller_hu3535a59bacd6c5c8b04c4630c62b3385_215479_a576d05812abd5f995d46039ef1a41b1.webp 760w,
               /post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/usb-volume-controller_hu3535a59bacd6c5c8b04c4630c62b3385_215479_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/usb-volume-controller_hu3535a59bacd6c5c8b04c4630c62b3385_215479_c20eba47d76aea6a8a19cea4d0e9aa3b.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;It emits expected events as &lt;code&gt;KEY_VOLUMEUP&lt;/code&gt; and &lt;code&gt;KEY_VOLUMEDOWN&lt;/code&gt; with the dial, and &lt;code&gt;KEY_MUTE&lt;/code&gt; when the knob is pressed.&lt;/p&gt;
&lt;p&gt;I created a &amp;ldquo;&lt;a href=&#34;https://www.freedesktop.org/software/systemd/man/hwdb.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hwdb&lt;/a&gt;&amp;rdquo; file to remap the mute key to something else as follows in &lt;code&gt;/etc/udev/hwdb.d/99-local-remap-usb-volume-control.hwdb&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# STMicroelectronics USB Volume Control
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Remap the click (Mute) to XF86Launch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;evdev:input:b0003v0483p572D*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; KEYBOARD_KEY_c00e2=prog4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the hardware database is updated with &lt;code&gt;systemd-hwdb update&lt;/code&gt; and the device is unplugged and plugged again (if without udevadm commands), I was able to map &lt;code&gt;Launch4&lt;/code&gt;(prog4) to the xdotool commands in GNOME successfully.&lt;/p&gt;
&lt;p&gt;It looks like everyone had the same idea. There are fancier buttons out there :-)&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-dnt=&#34;true&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Never going to fumble for the mute button on a google meet again. Plus bonus pac man feels. &lt;a href=&#34;https://twitter.com/sparkfun?ref_src=twsrc%5Etfw&#34;&gt;@sparkfun&lt;/a&gt; &lt;a href=&#34;https://t.co/2oG7U2EcoR&#34;&gt;pic.twitter.com/2oG7U2EcoR&lt;/a&gt;&lt;/p&gt;&amp;mdash; joe (@joemcmanus) &lt;a href=&#34;https://twitter.com/joemcmanus/status/1341866233600217088?ref_src=twsrc%5Etfw&#34;&gt;December 23, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Minimal Dynamic DNS configuration for No-IP.com with ddclient</title>
      <link>https://nobuto-m.github.io/post/2018/minimal-dynamic-dns-configuration-for-no-ip.com-with-ddclient/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0900</pubDate>
      <guid>https://nobuto-m.github.io/post/2018/minimal-dynamic-dns-configuration-for-no-ip.com-with-ddclient/</guid>
      <description>

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://nobuto-m.github.io/post/2018/minimal-dynamic-dns-configuration-for-no-ip.com-with-ddclient/featured.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    EDIT: I have migrated one of my domains to &lt;a href=&#34;https://domains.google/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Domains&lt;/a&gt; so I&amp;rsquo;m using &lt;a href=&#34;https://support.google.com/domains/answer/6147083&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;protocol=googledomains&lt;/code&gt;&lt;/a&gt; these days.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When I searched for a way to configure ddclient for &lt;a href=&#34;https://www.noip.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No-IP.com&lt;/a&gt;, some pages mention &lt;code&gt;protocol=dyndns2&lt;/code&gt; with a custom URL. But actually, ddclient supports &lt;code&gt;protocol=noip&lt;/code&gt; out of the box, so minimal steps would be something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt install ddclient
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF | sudo tee /etc/ddclient.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;use=web
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;ssl=yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;protocol=noip
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;login=&amp;lt;USERNAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;password=&amp;lt;PASSWORD&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;YOUR_HOSTNAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And here we go.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;run_daemon=&amp;#34;true&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee -a /etc/default/ddclient
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo service ddclient restart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ journalctl -u ddclient.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemd&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Started LSB: Update dynamic domain name service entries.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ddclient&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;24631&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: SUCCESS:  updating MY_HOST.redirectme.net: good: IP address &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; to 118.X.Y.Z
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more details, please refer to &lt;code&gt;ddclient -help&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href=&#34;https://medium.com/@nobuto_m/minimal-dynamic-dns-configuration-for-no-ip-com-with-ddclient-cb7c038a74be&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/@nobuto_m/minimal-dynamic-dns-configuration-for-no-ip-com-with-ddclient-cb7c038a74be&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Knowing what services need restart with “needrestart”</title>
      <link>https://nobuto-m.github.io/post/2017/knowing-what-services-need-restart-with-needrestart/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0900</pubDate>
      <guid>https://nobuto-m.github.io/post/2017/knowing-what-services-need-restart-with-needrestart/</guid>
      <description>&lt;p&gt;With &lt;a href=&#34;https://www.kernel.org/doc/Documentation/livepatch/livepatch.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Livepatch support in Linux kernel&lt;/a&gt; and &lt;a href=&#34;https://www.ubuntu.com/server/livepatch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Livepatch service for Ubuntu&lt;/a&gt;, reboots are no longer necessary even when kernel vulnerabilities are found. You can avoid and postpone unplanned reboots to whenever convenient for you, such as scheduled maintenance windows (Well, there are some corner cases which still require reboots though).&lt;/p&gt;
&lt;p&gt;What about services? After applying security updates of libraries, some services still grab old libraries which may have vulnerabilities. You can list up those processes with “lsof”.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo lsof / &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; egrep -w &lt;span class=&#34;s1&#34;&gt;&amp;#39;DEL|deleted&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apache2 &lt;span class=&#34;m&#34;&gt;2296&lt;/span&gt; root DEL REG 252,0 &lt;span class=&#34;m&#34;&gt;260616&lt;/span&gt; /lib/x86_64-linux-gnu/libcrypto.so.1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apache2 &lt;span class=&#34;m&#34;&gt;2296&lt;/span&gt; root DEL REG 252,0 &lt;span class=&#34;m&#34;&gt;260711&lt;/span&gt; /lib/x86_64-linux-gnu/libssl.so.1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apache2 &lt;span class=&#34;m&#34;&gt;2299&lt;/span&gt; www-data DEL REG 252,0 &lt;span class=&#34;m&#34;&gt;260616&lt;/span&gt; /lib/x86_64-linux-gnu/libcrypto.so.1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apache2 &lt;span class=&#34;m&#34;&gt;2299&lt;/span&gt; www-data DEL REG 252,0 &lt;span class=&#34;m&#34;&gt;260711&lt;/span&gt; /lib/x86_64-linux-gnu/libssl.so.1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With “lsof”, you have to determine which process belongs to which systemd unit and manually restart those units. There is a helper script called “needrestart”. It is inspired by checkrestart from the debian-goodies package according to their doc. It shows a handy dialogue at the end of &lt;code&gt;apt upgrade&lt;/code&gt; and prompts service restarts.&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://nobuto-m.github.io/post/2017/knowing-what-services-need-restart-with-needrestart/featured.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;To use “needrestart”, you just need to install a package with the same name.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt install needrestart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also change the default behavior by editing &lt;code&gt;/etc/needrestart/needrestart.conf&lt;/code&gt;. For example, you can enable automatic restart without asking.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Restart services (l)ist only, (i)nteractive or (a)utomatically.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#$nrconf{restart} = &amp;#39;i&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Furthermore, it has “nagios” plugin mode(&lt;code&gt;-p&lt;/code&gt;) so that it can be integrated with monitoring systems. With this mode, you might want to skip an obsolete kernel check by adding &lt;code&gt;-l&lt;/code&gt; flag if kernel patching is managed by Livepatch.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo needrestart -p -l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CRIT — Services: &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;!&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, Containers: none, Sessions: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;!&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;Services&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;Containers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;Sessions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is an example of Nagios status output.&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://nobuto-m.github.io/post/2017/knowing-what-services-need-restart-with-needrestart/nagios.png&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href=&#34;https://medium.com/@nobuto_m/knowing-what-services-need-restart-with-needrestart-37419f44ed46&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/@nobuto_m/knowing-what-services-need-restart-with-needrestart-37419f44ed46&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>
