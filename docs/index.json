[{"authors":null,"categories":null,"content":"Posting something, sometimes.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608874061,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Posting something, sometimes.","tags":null,"title":"Nobuto Murata","type":"authors"},{"authors":[],"categories":["Ubuntu"],"content":"Just like everyone else, 2020 was the year of having more and more video-conference calls. How many times did we struggle to find the meeting window during a call, and say \u0026ldquo;Sorry, I was on mute\u0026rdquo;? I tried to address the pain and ended up with the following setup.\nxdotool xdotool is a great automation tool for X, and it can search a window, activate it, and simulate keyboard input. That\u0026rsquo;s a perfect match for the use case here.\nHere is an example command for Google Meet.\n$ xdotool search --name '^Meet - .+ - Chromium$' \\ windowactivate --sync \\ key ctrl+d  In the chained commands, it does:\n search windows named like Meet - \u0026lt;MEETING_ID\u0026gt; - Chromium activate the first window passed by the previous line and wait until it gets active (--sync) send a keystroke as Ctrl+D, which is the default shortcut in Meet  By the way, my main browser is Firefox, but I have to use Chromium to join Meet calls since it tends to have less CPU utilization.\nYou can do something similar for Zoom with Alt+A.\n$ xdotool search --name '^Zoom Meeting$' \\ windowactivate --sync \\ key alt+a  Microsoft Teams should work with xdotool and Ctrl+Shift+M at least for the web version.\nGNOME keyboard shortcuts The commands above can be mapped to a shortcut key with GNOME.\nIt\u0026rsquo;s pretty simple, but some tricks may be required. As far as I see, gsd-media-keys will invoke a command when a shortcut key is pressed, not released. In my case, I use Ctrl+space as the shortcut key, so Meet may recognize keys pressed as Ctrl+space + Ctrl+D = Ctrl+space+D which doesn\u0026rsquo;t trigger the mute/unmute behavior actually. Keys can be canceled with keyup, so the key command was turned into keyup space key ctrl+d in the end.\nAlso, I wanted to use the same shortcut key for multiple services, and I have the following line which tries Google Meet first, then Zoom if no Meet window is found. It should work most of the cases unless you join multiple meetings at the same time.\nsh -c \u0026quot; xdotool search --name '^Meet - .+ - Chromium$' windowactivate --sync keyup space key ctrl+d || xdotool search --name '^Zoom Meeting$' windowactivate --sync keyup ctrl+space key alt+a \u0026quot;  --clearmodifiers can be used to simplify the whole commands, but when I tried, it sometimes left the Ctrl key pressed depending on the timing I released the key.\nHardware mute/unmute button Going further, I wanted to have a dedicated button to mute/unmute myself especially for some relaxed meetings where I don\u0026rsquo;t have to keep my hands on the keyboard all the time.\nBack in October, I bought a USB volume controller, which is recognized as \u0026ldquo;STMicroelectronics USB Volume Control\u0026rdquo; from the OS. It was around 15 USD.\nIt emits expected events as KEY_VOLUMEUP and KEY_VOLUMEDOWN with the dial, and KEY_MUTE when the knob is pressed.\nI created a \u0026ldquo;hwdb\u0026rdquo; file to remap the mute key to something else as follows in /etc/udev/hwdb.d/99-local-remap-usb-volume-control.hwdb.\n# STMicroelectronics USB Volume Control # Remap the click (Mute) to XF86Launch evdev:input:b0003v0483p572D* KEYBOARD_KEY_c00e2=prog4  Once the hardware database is updated with systemd-hwdb update and the device is unplugged and plugged again (if without udevadm commands), I was able to map Launch4(prog4) to the xdotool commands in GNOME successfully.\nIt looks like everyone had the same idea. There are fancier buttons out there :-)\nNever going to fumble for the mute button on a google meet again. Plus bonus pac man feels. @sparkfun pic.twitter.com/2oG7U2EcoR\n\u0026mdash; joe (@joemcmanus) December 23, 2020  ","date":1609354193,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609354193,"objectID":"b3456bd7371184b53578e836effa3a9c","permalink":"https://nobuto-m.github.io/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/","publishdate":"2020-12-31T03:49:53+09:00","relpermalink":"/post/2020/shortcut-key-to-mute-unmute-yourself-in-zoom-or-google-meet/","section":"post","summary":"Just like everyone else, 2020 was the year of having more and more video-conference calls. How many times did we struggle to find the meeting window during a call, and say \u0026ldquo;Sorry, I was on mute\u0026rdquo;?","tags":["planet-ubuntu"],"title":"Shortcut key to mute/unmute yourself in Zoom or Google Meet","type":"post"},{"authors":[],"categories":["Ubuntu"],"content":" EDIT: I have migrated one of my domains to Google Domains so I\u0026rsquo;m using protocol=googledomains these days.   When I searched for a way to configure ddclient for No-IP.com, some pages mention protocol=dyndns2 with a custom URL. But actually, ddclient supports protocol=noip out of the box, so minimal steps would be something like:\n$ sudo apt install ddclient $ cat \u0026lt;\u0026lt;EOF | sudo tee /etc/ddclient.conf use=web ssl=yes protocol=noip login=\u0026lt;USERNAME\u0026gt; password=\u0026lt;PASSWORD\u0026gt; \u0026lt;YOUR_HOSTNAME\u0026gt; EOF  And here we go.\n$ echo 'run_daemon=\u0026quot;true\u0026quot;' | sudo tee -a /etc/default/ddclient $ sudo service ddclient restart $ journalctl -u ddclient.service ... systemd[1]: Started LSB: Update dynamic domain name service entries. ddclient[24631]: SUCCESS: updating MY_HOST.redirectme.net: good: IP address set to 118.X.Y.Z  For more details, please refer to ddclient -help.\n This post was originally published at https://medium.com/@nobuto_m/minimal-dynamic-dns-configuration-for-no-ip-com-with-ddclient-cb7c038a74be\n ","date":1532098800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609180193,"objectID":"00f6ce3e4623d47f017231f47adc1b7f","permalink":"https://nobuto-m.github.io/post/2018/minimal-dynamic-dns-configuration-for-no-ip.com-with-ddclient/","publishdate":"2018-07-21T00:00:00+09:00","relpermalink":"/post/2018/minimal-dynamic-dns-configuration-for-no-ip.com-with-ddclient/","section":"post","summary":"EDIT: I have migrated one of my domains to Google Domains so I\u0026rsquo;m using protocol=googledomains these days.   When I searched for a way to configure ddclient for No-IP.","tags":["planet-ubuntu"],"title":"Minimal Dynamic DNS configuration for No-IP.com with ddclient","type":"post"},{"authors":[],"categories":["Ubuntu"],"content":"With Livepatch support in Linux kernel and Livepatch service for Ubuntu, reboots are no longer necessary even when kernel vulnerabilities are found. You can avoid and postpone unplanned reboots to whenever convenient for you, such as scheduled maintenance windows (Well, there are some corner cases which still require reboots though).\nWhat about services? After applying security updates of libraries, some services still grab old libraries which may have vulnerabilities. You can list up those processes with “lsof”.\n$ sudo lsof / | egrep -w 'DEL|deleted' ... apache2 2296 root DEL REG 252,0 260616 /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 apache2 2296 root DEL REG 252,0 260711 /lib/x86_64-linux-gnu/libssl.so.1.0.0 apache2 2299 www-data DEL REG 252,0 260616 /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 apache2 2299 www-data DEL REG 252,0 260711 /lib/x86_64-linux-gnu/libssl.so.1.0.0 ...  With “lsof”, you have to determine which process belongs to which systemd unit and manually restart those units. There is a helper script called “needrestart”. It is inspired by checkrestart from the debian-goodies package according to their doc. It shows a handy dialogue at the end of apt upgrade and prompts service restarts.\nTo use “needrestart”, you just need to install a package with the same name.\n$ sudo apt install needrestart  You can also change the default behavior by editing /etc/needrestart/needrestart.conf. For example, you can enable automatic restart without asking.\n# Restart services (l)ist only, (i)nteractive or (a)utomatically. #$nrconf{restart} = 'i';  Furthermore, it has “nagios” plugin mode(-p) so that it can be integrated with monitoring systems. With this mode, you might want to skip an obsolete kernel check by adding -l flag if kernel patching is managed by Livepatch.\n$ sudo needrestart -p -l CRIT — Services: 4 (!), Containers: none, Sessions: 1 (!)|Services=4;;0;0 Containers=0;;0;0 Sessions=1;0;;0  Here is an example of Nagios status output.\n This post was originally published at https://medium.com/@nobuto_m/knowing-what-services-need-restart-with-needrestart-37419f44ed46\n ","date":1499094000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608799869,"objectID":"94efc66abdbea2e1248661b51065423f","permalink":"https://nobuto-m.github.io/post/2017/knowing-what-services-need-restart-with-needrestart/","publishdate":"2017-07-04T00:00:00+09:00","relpermalink":"/post/2017/knowing-what-services-need-restart-with-needrestart/","section":"post","summary":"With Livepatch support in Linux kernel and Livepatch service for Ubuntu, reboots are no longer necessary even when kernel vulnerabilities are found. You can avoid and postpone unplanned reboots to whenever convenient for you, such as scheduled maintenance windows (Well, there are some corner cases which still require reboots though).","tags":["planet-ubuntu"],"title":"Knowing what services need restart with “needrestart”","type":"post"}]